https://github.com/qmdch1/javaGrammer.git

list
	ArrayList - index접근 검색빠름, 중간에 있는 데이터 삽입과 삭제가 많다면 비효율적
	LinkedList - 순차적접근 검색느림, 중간에 있는 데이터 삽입과 삭제가 많으면 효율적

Set 
	HashSet - 특별한 사유가 없다면 검색 성능이 좋은 HashSet을 사용
	LinkedHashSet - 순서를 보장하고 싶다면 LinkedHashSet을 사용
	TreeSet - 키값을 일정하게 iterate 하고자한다면 TreeSet을 사용
	
Map
	HashMap - 특별한 사유가 없다면 검색 성능이 좋은 HashMap을 사용
	LinkedHashMap - 순서를 보장하고 싶다면 LinkedHashMap을 사용
	TreeMap - 키값을 일정하게 iterate 하고자한다면 TreeMap을 사용
	
ArrayBlockingQueue
	add - 추가
	put - 여유 공간이 생길 때까지 대기 후 객체 추가
	offer - 예외 없이 아이템 추가
	take - 아이템을 삭제하고 그 값을 리턴한다. 비어있는 경우 InterruptedffException발생
	poll - 객체 리턴될 대까지 일정 시간 대기
	
StringBuffer
	동기화 키워드를 지원하며, 멀티쓰레드 환경에서 안전하다.
	setCharAt(n, 'c'); n위치 데이터를 c로 수정
	
StringBuilder
	동기화를 지원하지 않기 때문에 멀티쓰레드 환경에서 사용하는 것은 적합하지 않지만, 단일쓰레드에서의 성능은 StringBuffer보다 더 좋다.